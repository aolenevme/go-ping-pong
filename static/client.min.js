const canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d"),ballRadius=10,paddleWidth=75,paddleHeight=10,paddleColor="#141414",ballColor="#d0d0cf";let x=canvas.width/2,y=canvas.height-30,dx=2,dy=-2,paddleTopX=(canvas.width-75)/2,paddleBottomX=(canvas.width-75)/2,rightPressed=!1,leftPressed=!1,interval=setInterval(draw,10);function draw(){ctx.clearRect(0,0,canvas.width,canvas.height),drawBall(),drawPaddle(paddleTopX,0),drawPaddle(paddleBottomX,canvas.height-10),(x>canvas.width-10||x<10)&&(dx=-dx),shouldRevertBallByY()&&(dy=-dy),(y+10>canvas.height-10||y-10<10)&&(alert("Game Over"),document.location.reload(),clearInterval(interval)),rightPressed&&paddleBottomX<canvas.width-75?paddleBottomX+=7:leftPressed&&paddleBottomX>0&&(paddleBottomX-=7),x+=dx,y+=dy}function shouldRevertBallByY(){const e=x>=paddleTopX&&x<paddleTopX+75&&y-10<=10,t=x>=paddleBottomX&&x<paddleBottomX+75&&y+10>=canvas.height-10;return e||t}function drawBall(){ctx.beginPath(),ctx.arc(x,y,10,0,2*Math.PI),ctx.fillStyle="#d0d0cf",ctx.fill(),ctx.closePath()}function drawPaddle(e=0,t=0){ctx.beginPath(),ctx.rect(e,t,75,10),ctx.fillStyle="#141414",ctx.fill(),ctx.closePath()}function keyDownHandler(e={}){const t=e.key;"Right"===t||"ArrowRight"===t?rightPressed=!0:"Left"!==t&&"ArrowLeft"!==t||(leftPressed=!0)}function keyUpHandler(e={}){const t=e.key;"Right"===t||"ArrowRight"===t?rightPressed=!1:"Left"!==t&&"ArrowLeft"!==t||(leftPressed=!1)}function runSse(){const e=new EventSource("api/v1/sse");e.addEventListener("open",(()=>{console.log("Stream is open")})),e.addEventListener("error",(e=>{switch(e.target.readyState){case EventSource.CONNECTING:console.log("Reconnecting");break;case EventSource.CLOSED:console.log("Connections failed, will not reconnect");break;default:console.log("Unknown error")}})),e.addEventListener("message",(e=>{const t=JSON.parse(e.data);console.dir(t)}))}document.addEventListener("keydown",keyDownHandler,!1),document.addEventListener("keyup",keyUpHandler,!1),runSse();