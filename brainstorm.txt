Brainstorm

1. Состояния:
	1.1. IN_GAME
	1.2. WAITING_COMPETITOR
	1.3. GAME_OVER

2. Данные в SSE:
	2.1. Передача положения x,y твоего весла на сервер. *POST /api/v1/sse/data*
	2.2. Получение положения x,y весла конкурента с сервера. *SSE*
	2.3. Получение положения x,y шарика с сервера обоим клиентам. *SSE*
	2.4. Id? Retry?

3. Очередь сообщений:
	3.1. Решается через Id в SSE? 

TODO:
	1. Добавить Last-Event-Id. (это MQ) X
	2. Проработать состояния закрытия/открытия на бэке X
	3. Отрисовать UI для всех состояний
	4. Соединить два клиента через SSE и отправить какие-нибудь данные. Сделать профилирование на бэке(инструменты Golang) и фронте (Performance)

4. Set-Cookie brainstorming
	4.1. Обменяться Set-Cookie во время получения index.html. Set-Cookie: id=top/bottom; HttpOnly +
	4.2. Проверять, что оба айдишника активны, на сервере
	4.3. Передавать {destination: "RIGHT"/"LEFT"} в PUT c куками и их парсить на бэке, вытаскивая id. Обновить логику X/Y paddleBottom/paddleTop
	4.4. Реализовать логику обнуления состояния сервера при отключении одного из игроков
	4.5. Отрисовать UI для всех состояний: смотри пункт (1)
	4.6. Задеплоить куда-то с https сертификатом
